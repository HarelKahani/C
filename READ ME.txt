Exercise 3                           ==========================================================
CREATED BY : Harel Kahani .

Program description:
In "Exercise 3" we have three different programs: ex3a,ex3b,ex3c

ex3a –this program will give you an ordring list from highest value of item to lowest using greedy algorithem list. enter items by their
values and weights (the program connect each item as a node in linked list). The value's needs to be entered as 'a'-'j'
chars than it will convert into the right number when 'a'=0 ---> 'j'=9.
When finishing insert items press -1 (when insert weight appers),than enter the knapsack size to get the list of item sorted from the biggest value to the lowest with a fraction of how much from the lowest item entered to the sack. 

ex3b – this program will give you the highest value from a items list. enter items by their
values and weights (the program connect each item as a node in linked list). The value's needs to be entered as 'a'-'j'
chars than it will convert into the right number when 'a'=0 ---> 'j'=9.
When finishing insert items press -1 (when insert weight appers),than enter the knapsack size to get the matrix printing and the max value entered to the sack from your list.

ex3c- this program will creat a linked list from each char the user enter, than asked to
insert the amount of deliting jump that the user want to remove fron the list, the
program will print the final list without the chars after each requested jump.


Functions:
ex3a:
convert: taking care of changing 'a' to 'j' chars into their int value by ascii, and 
returns a new string with numbers only.
linked list functions: CreateNewNode,InsertAtEnd,free_list
merge sort (for linked lists- using front and back split).
greedy: taking as mach as it can and put in the sack.


ex3b:
convert: taking care of changing 'a' to 'j' chars into their int value by ascii, and 
returns a new string with numbers only.
linked list functions: CreateNewNode,InsertAtEnd,free_list
dynamic- take tha all item or non depends on a reqartion equasion transelate into matrix of value to prevent an exp. running time.


merge+mergesort.

Program files: 
ex3a.c – source code of ex3a
ex3b.c – source code of ex3b
ex3c.c – source code of ex3c

Compile and running: 
In Visual Studio IDE
To compile: Ctrl + shift + b 
To run: Ctrl + f5 

Input: 
ex3a – weight, value (as chars 'a' to 'j'), -1 when asking for weight to finish,knapsack 
ex3b – weight, value (as chars 'a' to 'j'), -1 when asking for weight to finish,knapsack
ex3c - chars sequence, number of jumps. 

Output:
ex3a – list of items sorted from the biggest value to the lowest with a fraction of how much from the lowest item value entered to the sack. 

ex3b - matrix with the max value at each weight (0-> the entered size),the max value in the sack.

ex3c-a list without the letters taha matches the jump input.
